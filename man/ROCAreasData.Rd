% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ROCAreasData.R
\name{ROCAreasData}
\alias{ROCAreasData}
\title{ROCs AREA data}
\usage{
ROCAreasData(dataRoc, resample = 10, DE = 0.1)
}
\arguments{
\item{dataRoc}{a data.frame where each column stores p values from each of the hypothesis test methods which are wanted to compare. The last column store the information related to real differential expression, where "0" means no differential expression and "1" means differential expression.}

\item{resample}{The number of resamplings of genes from data set in order to construct a boxplot from several samples from just one data set}
}
\value{
a data frame with the AREA under ROC values, for both full interval and [0,0.05] interval of p values, for every and each one of hypothesis test methods
}
\description{
ROCAreasData is a functions which provide the values of Areas under ROCs, for both full interval and [0,0.05] interval of p values, for several hypothesis testing methods, shuch a several Differential Expression analysis.
}
\examples{
library(compcodeR)
library(edgeR)
set.seed(123456987)
datasCI<-generateSyntheticData(dataset = "EMOresults", n.vars = 15000,samples.per.cond = 6, n.diffexp = 1500,repl.id = 1, seqdepth = 1e7,fraction.upregulated = 0.5,between.group.diffdisp = FALSE,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = 0)
expressiondata<-datasCI@count.matrix
TMMfac<-calcNormFactors.default(expressiondata,method = "TMM")
exprT<-t(t(expressiondata)*TMMfac)
conditions<-(datasCI@sample.annotations$condition-1)
testEMOTMM<-EMObuODlmTest(expr=exprT, condition = conditions,original = exprT,originalm=exprT)
edgeR.dgelist = DGEList(counts = expressiondata, group = factor(conditions))
edgeR.dgelist = calcNormFactors(edgeR.dgelist, method = "TMM")
edgeR.dgelist = estimateCommonDisp(edgeR.dgelist)
edgeR.dgelist = estimateTagwiseDisp(edgeR.dgelist, trend = "movingave")
edgeR.test = exactTest(edgeR.dgelist)
edgeR.pvalues = edgeR.test$table$PValue
edgeR.adjpvalues = p.adjust(edgeR.pvalues, method = "BH")
testedgeRTMM<-data.frame(FC=edgeR.test$table$logFC, PVALUE=edgeR.test$table$PValue, ADJ.PVAL=edgeR.adjpvalues)
dataRoc<-data.frame(EMO=testEMOTMM$ADJ.PVAL,edgeR=testedgeRTMM$ADJ.PVAL, DE=datasCI@variable.annotations$differential.expression)
ROCAreasData(dataRoc = dataRoc, Area,resample = 10,DE = 0.1)
}
\author{
Enrique Perez_Riesgo
}
