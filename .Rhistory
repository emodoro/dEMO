devtools::build()
devtools::build()
wordir<-getwd()
datadir<-file.path(wordir, "data")
library(edgeR)
library(compcodeR)
library(DESeq2)
samples<-6
OD<-"OverDisperssion6"
fractionNonOD<-0
ODdif<-FALSE
DEperc<-0.3
genesnum<-15000
upreg<-0.5
librarysiz<-1e6
name_results<-paste(fractionNonOD,OD,ODdif,"_",as.character(samples),"_",as.character(DEperc),"_", as.character(upreg),"_",as.character(librarysiz), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
name_results
fnonOD<-""
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),as.character(DEperc),"_", sep="")
name_results
OD<-"OD."
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),as.character(DEperc),"_", sep="")
name_results
librarysiz
DEperc<-0.1
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),"_",as.character(DEperc), sep="")
DEperc<-0.1
name_results
samples<-6
OD<-"OD."
fractionNonOD<-0
fnonOD<-""
ODdif<-FALSE
DEperc<-0.1
genesnum<-15000
upreg<-0.5
librarysiz<-1e6
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
samples<-6
OD<-"OD."
fractionNonOD<-0
fnonOD<-""
ODdif<-FALSE
DEperc<-0.3
genesnum<-15000
upreg<-0.5
librarysiz<-1e6
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
samples<-3
OD<-"OD."
fractionNonOD<-0
fnonOD<-""
ODdif<-FALSE
DEperc<-0.1
genesnum<-15000
upreg<-0.5
librarysiz<-1e6
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
samples<-9
OD<-"OD."
fractionNonOD<-0
fnonOD<-""
ODdif<-FALSE
DEperc<-0.1
genesnum<-15000
upreg<-0.5
librarysiz<-1e6
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
samples<-6
OD<-"OD."
fractionNonOD<-0
fnonOD<-""
ODdif<-FALSE
DEperc<-0.1
genesnum<-15000
upreg<-0.5
librarysiz<-1e7
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysiz),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
samples<-6
OD<-"OD."
fractionNonOD<-0
fnonOD<-""
ODdif<-FALSE
DEperc<-0.1
genesnum<-15000
upreg<-0.5
librarysize<-5e7
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysize),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
name_results
samples<-6
OD<-"OD."
fractionNonOD<-0.5
fnonOD<-"m"
ODdif<-FALSE
DEperc<-0.1
genesnum<-15000
upreg<-0.5
librarysize<-1e6
name_results<-paste(fnonOD,OD,as.character(samples), "_",as.character(librarysize),"_",as.character(DEperc), sep="")
main<-name_results
set.seed(123456987)
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD,output.file = file.path(datadir, paste(name_results, ".rds", sep="")))
library(edgeR)
library(compcodeR)
library(DESeq2)
expr3<-readRDS(file.path(datadir,paste("OD.6_1e+06_0.1", ".rds", seq="")))
datadir
file.path(datadir,paste("OD.6_1e+06_0.1", ".rds", seq=""))
dir()
dir(file.path(datadir))
expr3<-readRDS(file.path(datadir,"OD.6_1e+06_0.1.rds"))
devtools::use_vignette("TestingMethods")
data.frame(t(as.matrix(rep(librarysiz,samples*2)*expr3@sample.annotations$depth.factor)))
ROCrates(dataRoc = dataRoc, main=main)
ROCrates(dataRoc = dataRoc, main=main)
FDRcurve(dataRoc = dataRoc, main=main)
library(dEMO)
FDRcurve(dataRoc = dataRoc, main=main)
dataRoc<-data.frame(EMO=testEMOTMM$ADJ.PVAL,NBPseq=testNBPseq$ADJ.PVAL,edgeR=testedgeRTMM$ADJ.PVAL, DESeq=testDESeq$ADJ.PVAL, DE=expr3@variable.annotations$differential.expression)
dataRoc<-data.frame(EMO=testdEMOTMM$ADJ.PVAL,NBPseq=testNBPseq$ADJ.PVAL,edgeR=testedgeRTMM$ADJ.PVAL, DESeq=testDESeq$ADJ.PVAL, DE=expr3@variable.annotations$differential.expression)
#TMM normalization
TMMfac<-calcNormFactors.default(expr,method = "TMM")
library(edgeR)
library(compcodeR)
library(DESeq2)
#Load simulated RNA-seq data set
expr3<-readRDS(file.path(datadir,"OD.6_1e+06_0.1.rds"))
#Extract information of interest from simulated RNA-seq data sets
expr<-expr3@count.matrix
conditions<-(expr3@sample.annotations$condition-1)
#TMM normalization
TMMfac<-calcNormFactors.default(expr,method = "TMM")
exprT<-t(t(expr)*TMMfac)
#dEMO test
testEMOTMM<-EMObuODlmTest(expr=exprT, condition = conditions,original = exprT,originalm=exprT)
testdEMOTMM<-dEMObuODlmTest(expr=exprT, condition = conditions,original = exprT,originalm=exprT)
testdEMOTMM<-dEMObuODlmTest(expr=exprT, condition = conditions,original = exprT)
library(edgeR)
edgeR.dgelist = DGEList(counts = expr, group = factor(conditions))
edgeR.dgelist = calcNormFactors(edgeR.dgelist, method = "TMM")
edgeR.dgelist = estimateCommonDisp(edgeR.dgelist)
edgeR.dgelist = estimateTagwiseDisp(edgeR.dgelist, trend = "movingave")
edgeR.test = exactTest(edgeR.dgelist)
edgeR.pvalues = edgeR.test$table$PValue
edgeR.adjpvalues = p.adjust(edgeR.pvalues, method = "BH")
testedgeRTMM<-data.frame(FC=edgeR.test$table$logFC, PVALUE=edgeR.test$table$PValue, ADJ.PVAL=edgeR.adjpvalues)
library(DESeq)
DESeq.cds = newCountDataSet(countData = expr,conditions = factor(conditions))
DESeq.cds = estimateSizeFactors(DESeq.cds)
DESeq.cds = estimateDispersions(DESeq.cds, sharingMode = "maximum",method = "pooled", fitType = "local")
DESeq.test = nbinomTest(DESeq.cds, "0", "1")
DESeq.pvalues = DESeq.test$pval
DESeq.adjpvalues = p.adjust(DESeq.pvalues, method = "BH")
testDESeq<-data.frame(FC=DESeq.test$log2FoldChange, PVALUE=DESeq.test$pval, ADJ.PVAL=DESeq.adjpvalues)
library(edgeR)
library(NBPSeq)
NBPSeq.dgelist = DGEList(counts = expr, group = factor(conditions))
NBPSeq.dgelist = calcNormFactors(NBPSeq.dgelist, method = "TMM")
NBPSeq.norm.factors = as.vector(NBPSeq.dgelist$samples$norm.factors)
NBPSeq.test = nbp.test(counts = expr, grp.ids = conditions,grp1 = 0, grp2 = 1, norm.factors = NBPSeq.norm.factors)
NBPSeq.pvalues = NBPSeq.test$p.values
NBPSeq.adjpvalues = NBPSeq.test$q.values
testNBPseq<-data.frame(FC=NBPSeq.test$log.fc, PVALUE=NBPSeq.test$p.values, ADJ.PVAL=NBPSeq.test$q.values)
dataRoc<-data.frame(EMO=testdEMOTMM$ADJ.PVAL,NBPseq=testNBPseq$ADJ.PVAL,edgeR=testedgeRTMM$ADJ.PVAL, DESeq=testDESeq$ADJ.PVAL, DE=expr3@variable.annotations$differential.expression)
dataRocp<-data.frame(EMO=testEMOTMM$PVALUE,NBPseq=testNBPseq$PVALUE,edgeR=testedgeRTMM$PVALUE, DESeq=testDESeq$PVALUE, DE=expr3@variable.annotations$differential.expression)
dataRocp<-data.frame(EMO=testdEMOTMM$PVALUE,NBPseq=testNBPseq$PVALUE,edgeR=testedgeRTMM$PVALUE, DESeq=testDESeq$PVALUE, DE=expr3@variable.annotations$differential.expression)
ROCcurve(dataRoc = dataRoc, main=main)
ROCAreas(dataRoc = dataRoc, main=main,resample = 10,DE = DEperc)
ROCAreas005(dataRoc = dataRoc, main=main,resample = 10,DE = DEperc)
ROCcurve(dataRoc = dataRoc, main=main)
ROCAreas(dataRoc = dataRoc, main=main,resample = 10,DE = DEperc)
ROCAreas005(dataRoc = dataRoc, main=main,resample = 10,DE = DEperc)
ROCsrates<-ROCrates(dataRoc = dataRoc, main=main)
areasdata<-ROCAreasData(dataRoc = dataRoc, main=main,resample = 10,DE = DEperc)
areasdata<-ROCAreasData(dataRoc = dataRoc, main,resample = 10,DE = DEperc)
areasdata<-ROCAreasData(dataRoc = dataRoc, resample = 10,DE = DEperc)
FDRcurve(dataRoc = dataRoc, main="FDR curve")
FDRcurve(dataRoc = dataRoc, main="FDR curve")
FDRcurve(dataRoc = dataRoc, main="FDR curve")
FDRcurve(dataRoc = dataRoc, main="FDR")
FDRcurve(dataRoc = dataRoc, main="")
FDRcurve(dataRoc = dataRoc, main="FDR curve")
FDRcurve(dataRoc = dataRoc, main="")
FDRcurve(dataRoc = dataRoc, main="")
FDRcurve(dataRoc = dataRoc, main="")
input<-list( edgeR=rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05],  NBPseq=rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05], DESeq=rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05],EMO=rownames(expr3@count.matrix)[testEMOTMM$ADJ.PVAL<=0.05])
input<-list( edgeR=rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05],  NBPseq=rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05], DESeq=rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05],dEMO=rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05])
venn(input, universe = rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1])
library(gplots)
venn(input, universe = rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1])
input<-list(DE=rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1], edgeR=rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05],  NBPseq=rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05], DESeq=rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05],dEMO=rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05])
venn(input)
input<-list(DEGs=rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1], edgeR=rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05],  NBPseq=rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05], DESeq=rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05],dEMO=rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05])
#venn
library(gplots)
input<-list(DEGs=rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1], edgeR=rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05],  NBPseq=rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05], DESeq=rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05],dEMO=rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05])
venn(input)
#matriz of intersections of DEGs between each pair of methods
edgeRDE<-data.frame(edgeR=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05]),dEMO=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&testdEMOTMM$ADJ.PVAL<=0.05]), DESeq=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&testDESeq$ADJ.PVAL<=0.05]), NBPseq=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&testNBPseq$ADJ.PVAL<=0.05]), DE=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&expr3@variable.annotations$differential.expression==1]))
dEMODE<-data.frame(edgeR=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&testdEMOTMM$ADJ.PVAL<=0.05]),dEMO=length(rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05]), DESeq=length(rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05&testDESeq$ADJ.PVAL<=0.05]), NBPseq=length(rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05&testNBPseq$ADJ.PVAL<=0.05]),DE=length(rownames(expr3@count.matrix)[testdEMOTMM$ADJ.PVAL<=0.05&expr3@variable.annotations$differential.expression==1]))
DESeqDE<-data.frame(edgeR=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&testDESeq$ADJ.PVAL<=0.05]),dEMO=length(rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05&testdEMOTMM$ADJ.PVAL<=0.05]), DESeq=length(rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05]), NBPseq=length(rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05&testNBPseq$ADJ.PVAL<=0.05]),DE=length(rownames(expr3@count.matrix)[testDESeq$ADJ.PVAL<=0.05&expr3@variable.annotations$differential.expression==1]))
NBPseqDE<-data.frame(edgeR=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&testNBPseq$ADJ.PVAL<=0.05]),dEMO=length(rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05&testdEMOTMM$ADJ.PVAL<=0.05]), DESeq=length(rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05&testDESeq$ADJ.PVAL<=0.05]), NBPseq=length(rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05]),DE=length(rownames(expr3@count.matrix)[testNBPseq$ADJ.PVAL<=0.05&expr3@variable.annotations$differential.expression==1]))
DEDE<-data.frame(edgeR=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&expr3@variable.annotations$differential.expression==1]),dEMO=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1&testdEMOTMM$ADJ.PVAL<=0.05]), DESeq=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1&testDESeq$ADJ.PVAL<=0.05]), NBPseq=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1&testNBPseq$ADJ.PVAL<=0.05]),DE=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1]))
comparaciones<-rbind(edgeRDE, dEMODE, DESeqDE, NBPseqDE, DEDE)
rownames(comparaciones)<-c("edgeR", "dEMO", "DESeq", "NBPseq", "trueDE")
knitr::kable(comparaciones)
knitr::kable(comparaciones)
trueDEGs<-data.frame(edgeR=length(rownames(expr3@count.matrix)[testedgeRTMM$ADJ.PVAL<=0.05&expr3@variable.annotations$differential.expression==1]),dEMO=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1&testdEMOTMM$ADJ.PVAL<=0.05]), DESeq=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1&testDESeq$ADJ.PVAL<=0.05]), NBPseq=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1&testNBPseq$ADJ.PVAL<=0.05]),DE=length(rownames(expr3@count.matrix)[expr3@variable.annotations$differential.expression==1]))
comparaciones<-rbind(edgeRDE, dEMODE, DESeqDE, NBPseqDE, trueDEGs)
rownames(comparaciones)<-c("edgeR", "dEMO", "DESeq", "NBPseq", "trueDEGs")
knitr::kable(comparaciones)
trueDEGs
v
c
b
b
https://CRAN.R-project.org/package=NBPSeq
citation("NBPSeq")
devtools::build()
expr3<-generateSyntheticData(dataset = name_results, n.vars = genesnum,samples.per.cond = samples, n.diffexp = DEperc*genesnum,repl.id = 1, seqdepth = librarysiz,fraction.upregulated = upreg,between.group.diffdisp = ODdif,filter.threshold.total = 1,filter.threshold.mediancpm = 0,fraction.non.overdispersed = fractionNonOD)
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
browseVignettes("dEMO")
dEMO
source('C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO/R/dEMOODci.R')
source('C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO/R/dEMOODci.R')
source('C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO/R/dEMOODci.R')
devto
devtools::build()
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
library(dEMO)
?dEMObuODlmTest
devtools::build()
library(dEMO)
devtools::build()
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source", lib="C:/Users/Enrique/Documents/R/win-library/3.4")
library(dEMO)
devtools::build()
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
library(dEMO)
library(dEMO)
dEMO::dEMOODci()
dEMO::dEMOODci
devtools::build()
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
library(dEMO)
library(dEMO)
devtools::build()
library(dEMO)
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
library(dEMO)
dEMO::dEMOODci(+)
devtools::build()
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
library(dEMO)
library(dEMO)
devtools::build()
library(dEMO)
help(dEMO)
??dEMO
dEMO
?dEMO
?edgeR
?dEMO::EMOODci
devtools::load_all(".")
devtools::build()
library(dEMO)
library(dEMO)
install.packages("C:/Users/Enrique/Desktop/Doc/libreriasR/dEMO_1.0.0.tar.gz", repos = NULL, type = "source")
library(dEMO)
library(dEMO)
?dEMO::dEMObuODlmTest
browseVignettes("dEMO")
devtools::install_git("emodoro/dEMO")
devtools::install_github("emodoro/dEMO")
devtools::install_github("emodoro/dEMO")
library(dEMO)
browseVignettes("dEMO")
?dEMObuODlmTest
dEMO
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE)
devtools::install_github("emodoro/dEMO")
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE, force=TRUE)
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE, force=TRUE)
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE, force=TRUE)
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE)
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE, force=TRUE)
devtools::install_github("emodoro/dEMO", ref="v1.0.0")
devtools::install_github("emodoro/dEMO", ref="v1.0.0")
browseVignettes("dEMO")
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE)
devtools::install_github("emodoro/dEMO", build_vignettes=TRUE, force=TRUE)
